{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/siggu/Documents/git/react-native_todo/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { AppLoading } from 'expo';\nimport ToDo from \"./ToDo\";\nimport uuidv1 from 'uuid/v1';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      newToDo: '',\n      loadedToDos: false,\n      toDos: {}\n    };\n\n    _this.componentDidMount = function () {\n      _this._loadToDos();\n    };\n\n    _this._controlNewToDo = function (text) {\n      _this.setState({\n        newToDo: text\n      });\n    };\n\n    _this._loadToDos = function _callee() {\n      var toDos, parsedToDos;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('toDos'));\n\n            case 3:\n              toDos = _context.sent;\n              parsedToDos = JSON.parse(toDos);\n\n              _this.setState({\n                loadedToDos: true,\n                toDos: parsedToDos || {}\n              });\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this._addToDo = function () {\n      var newToDo = _this.state.newToDo;\n\n      if (newToDo !== '') {\n        _this.setState({\n          newToDo: ''\n        });\n\n        _this.setState(function (prevState) {\n          var ID = uuidv1();\n\n          var newToDoObject = _defineProperty({}, ID, {\n            id: ID,\n            isCompleted: false,\n            text: newToDo,\n            createdAt: Date.now()\n          });\n\n          var newState = _objectSpread({}, prevState, {\n            newToDo: '',\n            toDos: _objectSpread({}, prevState.toDos, {}, newToDoObject)\n          });\n\n          _this._saveToDos(newState.toDos);\n\n          return _objectSpread({}, newState);\n        });\n      }\n    };\n\n    _this._deleteToDo = function (id) {\n      _this.setState(function (prevState) {\n        var toDos = prevState.toDos;\n        delete toDos[id];\n\n        var newState = _objectSpread({}, prevState, {}, toDos);\n\n        _this._saveToDos(newState.toDos);\n\n        return _objectSpread({}, newState);\n      });\n    };\n\n    _this._uncompleteToDo = function (id) {\n      _this.setState(function (prevState) {\n        var newState = _objectSpread({}, prevState, {\n          toDos: _objectSpread({}, prevState.toDos, _defineProperty({}, id, _objectSpread({}, prevState.toDos[id], {\n            isCompleted: false\n          })))\n        });\n\n        _this._saveToDos(newState.toDos);\n\n        return _objectSpread({}, newState);\n      });\n    };\n\n    _this._completeToDo = function (id) {\n      _this.setState(function (prevState) {\n        var newState = _objectSpread({}, prevState, {\n          toDos: _objectSpread({}, prevState.toDos, _defineProperty({}, id, _objectSpread({}, prevState.toDos[id], {\n            isCompleted: true\n          })))\n        });\n\n        _this._saveToDos(newState.toDos);\n\n        return _objectSpread({}, newState);\n      });\n    };\n\n    _this._updateToDo = function (id, text) {\n      _this.setState(function (prevState) {\n        var newState = _objectSpread({}, prevState, {\n          toDos: _objectSpread({}, prevState.toDos, _defineProperty({}, id, _objectSpread({}, prevState.toDos[id], {\n            text: text\n          })))\n        });\n\n        _this._saveToDos(newState.toDos);\n\n        return _objectSpread({}, newState);\n      });\n    };\n\n    _this._saveToDos = function (newToDos) {\n      var saveToDos = AsyncStorage.setItem('toDos', JSON.stringify(newToDos));\n      console.log();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          newToDo = _this$state.newToDo,\n          loadedToDos = _this$state.loadedToDos,\n          toDos = _this$state.toDos;\n\n      if (!loadedToDos) {\n        return React.createElement(AppLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }, \"To Do List\"), React.createElement(View, {\n        style: styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: 'New To Do',\n        value: newToDo,\n        onChangeText: this._controlNewToDo,\n        placeholderTextColor: '#999',\n        returnKeyType: 'done',\n        autoCorrect: false,\n        onSubmitEditing: this._addToDo,\n        underlineColorAndroid: 'transparent',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      }), React.createElement(ScrollView, {\n        contentContainerStyle: styles.todos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, Object.values(toDos).reverse().map(function (toDo) {\n        return React.createElement(ToDo, _extends({\n          key: toDo.id,\n          deleteToDo: _this2._deleteToDo,\n          completeToDo: _this2._completeToDo,\n          uncompleteToDo: _this2._uncompleteToDo,\n          updateToDo: _this2._updateToDo\n        }, toDo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }\n        }));\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#99D8CF',\n    alignItems: 'center'\n  },\n  title: {\n    color: '#fff',\n    fontSize: 30,\n    marginTop: 60,\n    fontWeight: '300',\n    marginBottom: 30\n  },\n  card: _objectSpread({\n    backgroundColor: 'white',\n    flex: 1,\n    width: width - 25,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10\n  }, Platform.select({\n    ios: {\n      shadowColor: 'rgb(50, 50, 50)',\n      shadowOpacity: 0.5,\n      shadowRadius: 5,\n      shadowOffset: {\n        height: -1,\n        width: 0\n      }\n    },\n    android: {\n      elevation: 3\n    }\n  })),\n  input: {\n    padding: 20,\n    borderBottomColor: '#bbb',\n    borderBottomWidth: 1,\n    fontSize: 25\n  },\n  todos: {\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/siggu/Documents/git/react-native_todo/App.js"],"names":["React","useState","useEffect","AppLoading","ToDo","uuidv1","Dimensions","get","height","width","App","state","newToDo","loadedToDos","toDos","componentDidMount","_loadToDos","_controlNewToDo","text","setState","AsyncStorage","getItem","parsedToDos","JSON","parse","console","log","_addToDo","prevState","ID","newToDoObject","id","isCompleted","createdAt","Date","now","newState","_saveToDos","_deleteToDo","_uncompleteToDo","_completeToDo","_updateToDo","newToDos","saveToDos","setItem","stringify","styles","container","title","card","input","todos","Object","values","reverse","map","toDo","Component","StyleSheet","create","flex","backgroundColor","alignItems","color","fontSize","marginTop","fontWeight","marginBottom","borderTopLeftRadius","borderTopRightRadius","Platform","select","ios","shadowColor","shadowOpacity","shadowRadius","shadowOffset","android","elevation","padding","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  StyleSheet,\n  Text,\n  View,\n  StatusBar,\n  TextInput,\n  Dimensions,\n  Platform,\n  ScrollView,\n  AsyncStorage,\n} from 'react-native'\nimport { AppLoading } from 'expo'\nimport ToDo from './ToDo'\nimport uuidv1 from 'uuid/v1'\n\nconst { height, width } = Dimensions.get('window')\n\n// const App = () => {\n//   const [newToDo, setNewToDo] = useState('')\n//   const [loadedToDos, setLoadedToDos] = useState(false)\n//   const [toDos, setToDos] = useState({})\n//   useEffect(() => {\n//     _loadToDos()\n//   }, [])\n\n//   const _controlNewToDo = (text) => {\n//     setNewTodo(text)\n//   }\n//   _loadToDos = async () => {\n//     try {\n//       const toDos = await AsyncStorage.getItem('toDos')\n//       const parsedToDos = JSON.parse(toDos)\n//       this.setState({\n//         loadedToDos: true,\n//         toDos: parsedToDos || {},\n//       })\n//     } catch (e) {\n//       console.log(e)\n//     }\n//   }\n//   _addToDo = () => {\n//     const { newToDo } = this.state\n//     if (newToDo !== '') {\n//       this.setState({\n//         newToDo: '',\n//       })\n//       this.setState((prevState) => {\n//         const ID = uuidv1()\n//         const newToDoObject = {\n//           [ID]: {\n//             id: ID,\n//             isCompleted: false,\n//             text: newToDo,\n//             createdAt: Date.now(),\n//           },\n//         }\n//         const newState = {\n//           ...prevState,\n//           newToDo: '',\n//           toDos: {\n//             ...prevState.toDos,\n//             ...newToDoObject,\n//           },\n//         }\n//         this._saveToDos(newState.toDos)\n//         return { ...newState }\n//       })\n//     }\n//   }\n//   _deleteToDo = (id) => {\n//     this.setState((prevState) => {\n//       const toDos = prevState.toDos\n//       delete toDos[id]\n//       const newState = {\n//         ...prevState,\n//         ...toDos,\n//       }\n//       this._saveToDos(newState.toDos)\n//       return { ...newState }\n//     })\n//   }\n//   _uncompleteToDo = (id) => {\n//     this.setState((prevState) => {\n//       const newState = {\n//         ...prevState,\n//         toDos: {\n//           ...prevState.toDos,\n//           [id]: {\n//             ...prevState.toDos[id],\n//             isCompleted: false,\n//           },\n//         },\n//       }\n//       this._saveToDos(newState.toDos)\n//       return { ...newState }\n//     })\n//   }\n//   _completeToDo = (id) => {\n//     this.setState((prevState) => {\n//       const newState = {\n//         ...prevState,\n//         toDos: {\n//           ...prevState.toDos,\n//           [id]: {\n//             ...prevState.toDos[id],\n//             isCompleted: true,\n//           },\n//         },\n//       }\n//       this._saveToDos(newState.toDos)\n//       return { ...newState }\n//     })\n//   }\n//   _updateToDo = (id, text) => {\n//     this.setState((prevState) => {\n//       const newState = {\n//         ...prevState,\n//         toDos: {\n//           ...prevState.toDos,\n//           [id]: {\n//             ...prevState.toDos[id],\n//             text: text,\n//           },\n//         },\n//       }\n//       this._saveToDos(newState.toDos)\n//       return { ...newState }\n//     })\n//   }\n//   _saveToDos = (newToDos) => {\n//     const saveToDos = AsyncStorage.setItem('toDos', JSON.stringify(newToDos))\n//     console.log()\n//   }\n//   if (!loadedToDos) {\n//     return <AppLoading />\n//   }\n//   return (\n//     <View style={styles.container}>\n//       <StatusBar barStyle=\"light-content\" />\n//       <Text style={styles.title}>To Do List</Text>\n//       <View style={styles.card}>\n//         <TextInput\n//           style={styles.input}\n//           placeholder={'New To Do'}\n//           value={newToDo}\n//           onChangeText={this._controlNewToDo}\n//           placeholderTextColor={'#999'}\n//           returnKeyType={'done'}\n//           autoCorrect={false}\n//           onSubmitEditing={this._addToDo}\n//           underlineColorAndroid={'transparent'}\n//         />\n//         <ScrollView contentContainerStyle={styles.todos}>\n//           {Object.values(toDos)\n//             .reverse()\n//             .map((toDo) => (\n//               <ToDo\n//                 key={toDo.id}\n//                 deleteToDo={this._deleteToDo}\n//                 completeToDo={this._completeToDo}\n//                 uncompleteToDo={this._uncompleteToDo}\n//                 updateToDo={this._updateToDo}\n//                 {...toDo}\n//               />\n//             ))}\n//         </ScrollView>\n//       </View>\n//     </View>\n//   )\n// }\n\nexport default class App extends React.Component {\n  state = {\n    newToDo: '',\n    loadedToDos: false,\n    toDos: {},\n  }\n  componentDidMount = () => {\n    this._loadToDos()\n  }\n  render() {\n    const { newToDo, loadedToDos, toDos } = this.state\n    if (!loadedToDos) {\n      return <AppLoading />\n    }\n    return (\n      <View style={styles.container}>\n        <StatusBar barStyle=\"light-content\" />\n        <Text style={styles.title}>To Do List</Text>\n        <View style={styles.card}>\n          <TextInput\n            style={styles.input}\n            placeholder={'New To Do'}\n            value={newToDo}\n            onChangeText={this._controlNewToDo}\n            placeholderTextColor={'#999'}\n            returnKeyType={'done'}\n            autoCorrect={false}\n            onSubmitEditing={this._addToDo}\n            underlineColorAndroid={'transparent'}\n          />\n          <ScrollView contentContainerStyle={styles.todos}>\n            {Object.values(toDos)\n              .reverse()\n              .map((toDo) => (\n                <ToDo\n                  key={toDo.id}\n                  deleteToDo={this._deleteToDo}\n                  completeToDo={this._completeToDo}\n                  uncompleteToDo={this._uncompleteToDo}\n                  updateToDo={this._updateToDo}\n                  {...toDo}\n                />\n              ))}\n          </ScrollView>\n        </View>\n      </View>\n    )\n  }\n  _controlNewToDo = (text) => {\n    this.setState({\n      newToDo: text,\n    })\n  }\n  _loadToDos = async () => {\n    try {\n      const toDos = await AsyncStorage.getItem('toDos')\n      const parsedToDos = JSON.parse(toDos)\n      this.setState({\n        loadedToDos: true,\n        toDos: parsedToDos || {},\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  _addToDo = () => {\n    const { newToDo } = this.state\n    if (newToDo !== '') {\n      this.setState({\n        newToDo: '',\n      })\n      this.setState((prevState) => {\n        const ID = uuidv1()\n        const newToDoObject = {\n          [ID]: {\n            id: ID,\n            isCompleted: false,\n            text: newToDo,\n            createdAt: Date.now(),\n          },\n        }\n        const newState = {\n          ...prevState,\n          newToDo: '',\n          toDos: {\n            ...prevState.toDos,\n            ...newToDoObject,\n          },\n        }\n        this._saveToDos(newState.toDos)\n        return { ...newState }\n      })\n    }\n  }\n  _deleteToDo = (id) => {\n    this.setState((prevState) => {\n      const toDos = prevState.toDos\n      delete toDos[id]\n      const newState = {\n        ...prevState,\n        ...toDos,\n      }\n      this._saveToDos(newState.toDos)\n      return { ...newState }\n    })\n  }\n  _uncompleteToDo = (id) => {\n    this.setState((prevState) => {\n      const newState = {\n        ...prevState,\n        toDos: {\n          ...prevState.toDos,\n          [id]: {\n            ...prevState.toDos[id],\n            isCompleted: false,\n          },\n        },\n      }\n      this._saveToDos(newState.toDos)\n      return { ...newState }\n    })\n  }\n  _completeToDo = (id) => {\n    this.setState((prevState) => {\n      const newState = {\n        ...prevState,\n        toDos: {\n          ...prevState.toDos,\n          [id]: {\n            ...prevState.toDos[id],\n            isCompleted: true,\n          },\n        },\n      }\n      this._saveToDos(newState.toDos)\n      return { ...newState }\n    })\n  }\n  _updateToDo = (id, text) => {\n    this.setState((prevState) => {\n      const newState = {\n        ...prevState,\n        toDos: {\n          ...prevState.toDos,\n          [id]: {\n            ...prevState.toDos[id],\n            text: text,\n          },\n        },\n      }\n      this._saveToDos(newState.toDos)\n      return { ...newState }\n    })\n  }\n  _saveToDos = (newToDos) => {\n    const saveToDos = AsyncStorage.setItem('toDos', JSON.stringify(newToDos))\n    console.log()\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#99D8CF',\n    alignItems: 'center',\n  },\n  title: {\n    color: '#fff',\n    fontSize: 30,\n    marginTop: 60,\n    fontWeight: '300',\n    marginBottom: 30,\n  },\n  card: {\n    backgroundColor: 'white',\n    flex: 1,\n    width: width - 25,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgb(50, 50, 50)',\n        shadowOpacity: 0.5,\n        shadowRadius: 5,\n        shadowOffset: {\n          height: -1,\n          width: 0,\n        },\n      },\n      android: {\n        elevation: 3,\n      },\n    }),\n  },\n  input: {\n    padding: 20,\n    borderBottomColor: '#bbb',\n    borderBottomWidth: 1,\n    fontSize: 25,\n  },\n  todos: {\n    alignItems: 'center',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}