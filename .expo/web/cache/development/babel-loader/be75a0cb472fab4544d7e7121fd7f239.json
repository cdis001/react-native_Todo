{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/siggu/Documents/git/react-native_todo/ToDo.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PropTypes from \"prop-types\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ToDo = function (_React$Component) {\n  _inherits(ToDo, _React$Component);\n\n  var _super = _createSuper(ToDo);\n\n  function ToDo(props) {\n    var _this;\n\n    _classCallCheck(this, ToDo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isEditing: false,\n      toDoValue: \"\"\n    };\n\n    _this._toggleComplete = function (event) {\n      event.stopPropagation();\n      var _this$props = _this.props,\n          isCompleted = _this$props.isCompleted,\n          completeToDo = _this$props.completeToDo,\n          uncompleteToDo = _this$props.uncompleteToDo,\n          id = _this$props.id;\n\n      if (isCompleted) {\n        uncompleteToDo(id);\n      } else {\n        completeToDo(id);\n      }\n    };\n\n    _this._startEditing = function (event) {\n      event.stopPropagation();\n\n      _this.setState({\n        isEditing: true\n      });\n    };\n\n    _this._finishEditing = function (event) {\n      event.stopPropagation();\n      var toDoValue = _this.state.toDoValue;\n      var _this$props2 = _this.props,\n          id = _this$props2.id,\n          updateToDo = _this$props2.updateToDo;\n      updateToDo(id, toDoValue);\n\n      _this.setState({\n        isEditing: false\n      });\n    };\n\n    _this._controllInput = function (text) {\n      _this.setState({\n        toDoValue: text\n      });\n    };\n\n    _this.state = {\n      isEditing: false,\n      toDoValue: props.text\n    };\n    return _this;\n  }\n\n  _createClass(ToDo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isEditing = _this$state.isEditing,\n          toDoValue = _this$state.toDoValue;\n      var _this$props3 = this.props,\n          text = _this$props3.text,\n          deleteToDo = _this$props3.deleteToDo,\n          id = _this$props3.id,\n          isCompleted = _this$props3.isCompleted;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.column,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this._toggleComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: [styles.circle, isCompleted ? styles.completedCircle : styles.uncompletedCircle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      })), isEditing ? React.createElement(TextInput, {\n        style: [styles.text, styles.input, isCompleted ? styles.completedText : styles.uncompletedText],\n        value: toDoValue,\n        multiline: true,\n        onChangeText: this._controllInput,\n        returnKeyType: \"done\",\n        onBlur: this._finishEditing,\n        underlineColorAndroid: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }) : React.createElement(Text, {\n        style: [styles.text, isCompleted ? styles.completedText : styles.uncompletedText],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, text)), isEditing ? React.createElement(View, {\n        style: styles.actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPressOut: this._finishEditing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.actionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.actionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"\\u2705\")))) : React.createElement(View, {\n        style: styles.actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPressOut: this._startEditing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.actionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.actionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, \"\\u270F\\uFE0F\"))), React.createElement(TouchableOpacity, {\n        onPressOut: function onPressOut(event) {\n          event.stopPropagation;\n          deleteToDo(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.actionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.actionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, \"\\u274C\")))));\n    }\n  }]);\n\n  return ToDo;\n}(React.Component);\n\nToDo.propTypes = {\n  text: PropTypes.string.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n  deleteToDo: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  completeToDo: PropTypes.func.isRequired,\n  uncompleteToDo: PropTypes.func.isRequired,\n  updateToDo: PropTypes.func.isRequired\n};\nexport { ToDo as default };\nvar styles = StyleSheet.create({\n  container: {\n    width: width - 50,\n    borderBottomColor: \"#bbb\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  circle: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    borderWidth: 3,\n    marginRight: 20,\n    marginLeft: 10\n  },\n  completedCircle: {\n    borderColor: \"#bbb\"\n  },\n  uncompletedCircle: {\n    borderColor: \"#73E1A1\"\n  },\n  text: {\n    fontWeight: \"600\",\n    fontSize: 20,\n    marginVertical: 20\n  },\n  completedText: {\n    color: \"#bbb\",\n    textDecorationLine: \"line-through\"\n  },\n  uncompletedText: {\n    color: \"#353535\"\n  },\n  column: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: width / 2\n  },\n  actions: {\n    flexDirection: \"row\"\n  },\n  actionContainer: {\n    marginVertical: 20,\n    marginHorizontal: 10\n  },\n  input: {\n    paddingTop: 0,\n    width: width / 2\n  }\n});","map":{"version":3,"sources":["/Users/siggu/Documents/git/react-native_todo/ToDo.js"],"names":["React","Component","PropTypes","Dimensions","get","width","height","ToDo","props","state","isEditing","toDoValue","_toggleComplete","event","stopPropagation","isCompleted","completeToDo","uncompleteToDo","id","_startEditing","setState","_finishEditing","updateToDo","_controllInput","text","deleteToDo","styles","container","column","circle","completedCircle","uncompletedCircle","input","completedText","uncompletedText","actions","actionContainer","actionText","propTypes","string","isRequired","bool","func","StyleSheet","create","borderBottomColor","borderBottomWidth","hairlineWidth","flexDirection","alignItems","justifyContent","borderRadius","borderWidth","marginRight","marginLeft","borderColor","fontWeight","fontSize","marginVertical","color","textDecorationLine","marginHorizontal","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { View, Text, TouchableOpacity, StyleSheet, Dimensions, TextInput } from \"react-native\"\nimport PropTypes from \"prop-types\"\n\nconst { width, height } = Dimensions.get(\"window\")\n\nexport default class ToDo extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isEditing: false,\n      toDoValue: props.text\n    }\n  }\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    isCompleted: PropTypes.bool.isRequired,\n    deleteToDo: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    completeToDo: PropTypes.func.isRequired,\n    uncompleteToDo: PropTypes.func.isRequired,\n    updateToDo: PropTypes.func.isRequired\n  }\n  state = {\n    isEditing: false,\n    toDoValue: \"\"\n  }\n  render() {\n    const { isEditing, toDoValue } = this.state\n    const { text, deleteToDo, id, isCompleted } = this.props\n    return (\n      <View style={styles.container}>\n        <View style={styles.column}>\n          <TouchableOpacity onPress={this._toggleComplete}>\n            <View\n              style={[\n                styles.circle,\n                isCompleted ? styles.completedCircle : styles.uncompletedCircle\n              ]}\n            />\n          </TouchableOpacity>\n          {isEditing ? (\n            <TextInput\n              style={[\n                styles.text,\n                styles.input,\n                isCompleted ? styles.completedText : styles.uncompletedText\n              ]}\n              value={toDoValue}\n              multiline={true}\n              onChangeText={this._controllInput}\n              returnKeyType={\"done\"}\n              onBlur={this._finishEditing}\n              underlineColorAndroid={\"transparent\"}\n            />\n          ) : (\n            <Text\n              style={[styles.text, isCompleted ? styles.completedText : styles.uncompletedText]}\n            >\n              {text}\n            </Text>\n          )}\n        </View>\n        {isEditing ? (\n          <View style={styles.actions}>\n            <TouchableOpacity onPressOut={this._finishEditing}>\n              <View style={styles.actionContainer}>\n                <Text style={styles.actionText}>✅</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <View style={styles.actions}>\n            <TouchableOpacity onPressOut={this._startEditing}>\n              <View style={styles.actionContainer}>\n                <Text style={styles.actionText}>✏️</Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPressOut={event => {\n                event.stopPropagation\n                deleteToDo(id)\n              }}\n            >\n              <View style={styles.actionContainer}>\n                <Text style={styles.actionText}>❌</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n    )\n  }\n  _toggleComplete = event => {\n    event.stopPropagation()\n    const { isCompleted, completeToDo, uncompleteToDo, id } = this.props\n    if (isCompleted) {\n      uncompleteToDo(id)\n    } else {\n      completeToDo(id)\n    }\n  }\n  _startEditing = event => {\n    event.stopPropagation()\n    this.setState({ isEditing: true })\n  }\n  _finishEditing = event => {\n    event.stopPropagation()\n    const { toDoValue } = this.state\n    const { id, updateToDo } = this.props\n    updateToDo(id, toDoValue)\n    this.setState({\n      isEditing: false\n    })\n  }\n  _controllInput = text => {\n    this.setState({ toDoValue: text })\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: width - 50,\n    borderBottomColor: \"#bbb\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  circle: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    borderWidth: 3,\n    marginRight: 20,\n    marginLeft: 10\n  },\n  completedCircle: {\n    borderColor: \"#bbb\"\n  },\n  uncompletedCircle: {\n    borderColor: \"#73E1A1\"\n  },\n  text: {\n    fontWeight: \"600\",\n    fontSize: 20,\n    marginVertical: 20\n  },\n  completedText: {\n    color: \"#bbb\",\n    textDecorationLine: \"line-through\"\n  },\n  uncompletedText: {\n    color: \"#353535\"\n  },\n  column: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: width / 2\n  },\n  actions: {\n    flexDirection: \"row\"\n  },\n  actionContainer: {\n    marginVertical: 20,\n    marginHorizontal: 10\n  },\n  input: {\n    paddingTop: 0,\n    width: width / 2\n  }\n})\n"]},"metadata":{},"sourceType":"module"}